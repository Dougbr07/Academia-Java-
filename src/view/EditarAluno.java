/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import com.lowagie.text.DocumentException;
import java.awt.Color;
import java.awt.HeadlessException;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import model.Aluno;
import model.AlunoDao;
import model.ConexaoBanco;
import model.relatorio;

/**
 *
 * @author Douglas Oliveira
 */
public class EditarAluno extends javax.swing.JFrame {

    DefaultTableModel tmAluno = new DefaultTableModel(null, new String[]{"Id", "Nome", "Cpf", "Endere√ßo", "Idade", "Peso","Altura", "Telefone"}){  
          public boolean isCellEditable(int rowIndex, int mColIndex) {  
                return false;  
            }  
        };
    List<Aluno> alunos;
    ListSelectionModel lsmAlunos;
    
    DefaultListModel model = new DefaultListModel();
    DefaultListModel model2 = new DefaultListModel();
    /**
     * Creates new form EditarAluno
     */
    public EditarAluno() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jBPesquisa = new javax.swing.JButton();
        jTPesquisa = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTTabela = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        JTid = new javax.swing.JTextField();
        JTnome = new javax.swing.JTextField();
        JTend = new javax.swing.JTextField();
        JTtel = new javax.swing.JTextField();
        JTidade = new javax.swing.JTextField();
        JTpeso = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        JTaltura = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        aulasMatriculadasList = new javax.swing.JList();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        JTcpf = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        aulasNaoMatriculadasList = new javax.swing.JList();
        jLabel11 = new javax.swing.JLabel();
        jBcancelarMatricula = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        imcText = new javax.swing.JTextField();
        imcMenssagem = new javax.swing.JTextField();

        setTitle("VISUALIZAR/EDITAR ALUNO");
        setResizable(false);

        jBPesquisa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Utilitarios/Magnifying-Glass-black-48.png"))); // NOI18N
        jBPesquisa.setText("Pesquisar");
        jBPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBPesquisaActionPerformed(evt);
            }
        });

        jTTabela.setModel(tmAluno);
        jTTabela.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        lsmAlunos = jTTabela.getSelectionModel();
        lsmAlunos.addListSelectionListener(new ListSelectionListener(){
            public void valueChanged(ListSelectionEvent e){
                if (! e.getValueIsAdjusting()){
                    jTTabelaLinhaSelecionada(jTTabela);
                }
            }
        });
        jScrollPane1.setViewportView(jTTabela);

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setText("ID:");

        jLabel1.setText("NOME:");

        jLabel3.setText("END.:");

        jLabel6.setText("TEL.:");

        jLabel4.setText("IDADE:");

        jLabel5.setText("PESO:");

        JTid.setEditable(false);

        jLabel7.setText("ALTURA:");

        jScrollPane2.setViewportView(aulasMatriculadasList);

        jLabel8.setText("AULAS MATRICULADAS:");

        jLabel10.setText("CPF:");

        jScrollPane3.setViewportView(aulasNaoMatriculadasList);

        jLabel11.setText("AULAS DISPONIVEIS:");

        jBcancelarMatricula.setText("Cancelar Mat.");
        jBcancelarMatricula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBcancelarMatriculaActionPerformed(evt);
            }
        });

        jButton1.setText("Matricular");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1)
                    .addComponent(jLabel6)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(JTtel, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JTidade, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(JTpeso, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(JTaltura, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(JTnome)
                    .addComponent(JTend)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(JTid, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(JTcpf, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBcancelarMatricula, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(JTid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(JTnome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(JTend, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(JTtel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JTidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JTpeso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(JTaltura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JTcpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(109, 109, 109))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBcancelarMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Utilitarios/Save-256.png"))); // NOI18N
        jButton2.setText("Salvar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Utilitarios/delete-128.png"))); // NOI18N
        jButton3.setText("Deletar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jLabel9.setText("NOME:");

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Utilitarios/Pdf-32.png"))); // NOI18N
        jButton4.setText("Gerar Relatorio");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel12.setText("IMC:");

        imcText.setEditable(false);

        imcMenssagem.setEditable(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(imcText, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 43, Short.MAX_VALUE))
                    .addComponent(imcMenssagem))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(imcText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(imcMenssagem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTPesquisa)
                        .addGap(18, 18, 18)
                        .addComponent(jBPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(jBPesquisa))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jTPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jBPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBPesquisaActionPerformed
        try {
            listarAlunos();
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problemas no campo de pesquisa!" + ex);
        } catch (Exception ex) {
            Logger.getLogger(EditarAluno.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jBPesquisaActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
       if (jTTabela.getSelectedRow() != -1) { 
          try {
            // TODO add your handling code here:
            excluirAluno();
            mostraPesquisa(alunos);
            listarAlunos();
        } catch (SQLException ex) {
             JOptionPane.showMessageDialog(null, "Erro ao Excluir: Cancele a matricula de todas as aulas deste aluno primeiro");
        } catch (Exception ex) {
            Logger.getLogger(EditarAluno.class.getName()).log(Level.SEVERE, null, ex);
        }
       }else {
       JOptionPane.showMessageDialog(null, "Selecione um aluno para excluir");
       }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
      try {
            alteraAluno();
            listarAlunos();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problema no Altera"+ex);
        } catch (Exception ex) {
            Logger.getLogger(EditarAluno.class.getName()).log(Level.SEVERE, null, ex);
        }
{
        
    }
        
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jBcancelarMatriculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBcancelarMatriculaActionPerformed
        // TODO add your handling code here:


        if (aulasMatriculadasList.getSelectedIndex() != -1) {
        int resp = JOptionPane.showConfirmDialog(this, "Deseja realmente cancelar a matricula ?",
        "Confirma√ß√£o", JOptionPane.YES_NO_OPTION);
        if (resp == JOptionPane.YES_NO_OPTION) {
        String REGEX = "\\d+";
        Matcher matcherAula = Pattern.compile(REGEX).matcher(aulasMatriculadasList.getSelectedValue().toString());
        
        matcherAula.find();
        
        String aula = matcherAula.group();

        PreparedStatement stmt = null;
        Connection conn = null;
        try {
            String sql = "delete from matricula where id_aluno = "+JTid.getText()+" and id_aula = "+aula;
            
            conn = ConexaoBanco.getAbreConexao ();
            stmt = conn.prepareStatement (sql);
            stmt.executeUpdate();
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro na exclus√£o de dados : \n " + e);
        }

        try {
            //listarAlunos();
            popularMatMatriculadasList();
            popularMatNaoMatriculadasList();
        } catch (Exception ex) {
            Logger.getLogger(EditarAluno.class.getName()).log(Level.SEVERE, null, ex);
        }
      }
         
       }else {
        JOptionPane.showMessageDialog(null, "Selecione uma aula para cancelar a matricula!");
        }
        
    }//GEN-LAST:event_jBcancelarMatriculaActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    if (jTTabela.getSelectedRow() == -1) {
        
       JOptionPane.showMessageDialog(null, "Selecione um aluno !");
       
    }else{    
        relatorio doc = new relatorio();
        try {
            doc.getRelatorioAluno(JTid.getText());
        } catch (DocumentException ex) {
            Logger.getLogger(TelaInicial.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(TelaInicial.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(TelaInicial.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        if (aulasNaoMatriculadasList.getSelectedIndex() != -1) {
        String REGEX = "\\d+";
        Matcher matcherAula = Pattern.compile(REGEX).matcher(aulasNaoMatriculadasList.getSelectedValue().toString());
        
        matcherAula.find();
        
        String aula = matcherAula.group();

        PreparedStatement stmt = null;
        Connection conn = null;
        try {
            conn = ConexaoBanco.getAbreConexao ();
            String sql = ( "insert into matricula(id_aluno, id_aula, data_matricula)" +
                    "values (?,?,getdate())");
            stmt = conn.prepareStatement (sql);
            stmt.setInt(1,Integer.parseInt(JTid.getText()));
            stmt.setInt (2,Integer.parseInt(matcherAula.group()));
            
            stmt.executeUpdate();
            JOptionPane.showMessageDialog(null,"MATRICULA FEITA!");
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro: " + e);
        }

        try {
            //listarAlunos();
            popularMatMatriculadasList();
            popularMatNaoMatriculadasList();
        } catch (Exception ex) {
            Logger.getLogger(EditarAluno.class.getName()).log(Level.SEVERE, null, ex);
        }
        }else {
        JOptionPane.showMessageDialog(null, "Selecione uma aula para matricular aluno!");
        } 
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditarAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditarAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditarAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditarAluno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditarAluno().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField JTaltura;
    private javax.swing.JTextField JTcpf;
    private javax.swing.JTextField JTend;
    private javax.swing.JTextField JTid;
    private javax.swing.JTextField JTidade;
    private javax.swing.JTextField JTnome;
    private javax.swing.JTextField JTpeso;
    private javax.swing.JTextField JTtel;
    private javax.swing.JList aulasMatriculadasList;
    private javax.swing.JList aulasNaoMatriculadasList;
    private javax.swing.JTextField imcMenssagem;
    private javax.swing.JTextField imcText;
    private javax.swing.JButton jBPesquisa;
    private javax.swing.JButton jBcancelarMatricula;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jTPesquisa;
    private javax.swing.JTable jTTabela;
    // End of variables declaration//GEN-END:variables
   
    public void excluirAluno() throws SQLException, Exception {
        int resp = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir esse aluno?",
                "Confirma√ß√£o", JOptionPane.YES_NO_OPTION);
        if (resp == JOptionPane.YES_NO_OPTION) {
            AlunoDao dao = new AlunoDao();
            dao.excluir(alunos.get(jTTabela.getSelectedRow()));
            mostraPesquisa(alunos);
        }
    }
    private void listarAlunos() throws Exception {
        
       AlunoDao dao = new AlunoDao();
       alunos = dao.consultarTodos("%" + jTPesquisa.getText()+ "%"); 
       mostraPesquisa(alunos);
        
  
    }

    private void mostraPesquisa(List<Aluno> alunos) {
     while(tmAluno.getRowCount()>0){
            tmAluno.removeRow(0);
        }
      if(alunos.isEmpty()){
          JOptionPane.showMessageDialog(null, "Nenhum aluno cadastro!");
      }else{
          String[] linha = new String[] {null, null, null, null, null, null, null};
          for (int i = 0; i < alunos.size(); i++) {
              tmAluno.addRow(linha);
              tmAluno.setValueAt(alunos.get(i).getIdAluno(), i, 0);
              tmAluno.setValueAt(alunos.get(i).getNome(), i, 1);
              tmAluno.setValueAt(alunos.get(i).getCpf(), i, 2);
              tmAluno.setValueAt(alunos.get(i).getEndereco(), i, 3);
              tmAluno.setValueAt(alunos.get(i).getIdade(), i, 4);
              tmAluno.setValueAt(alunos.get(i).getPeso(), i, 5);
              tmAluno.setValueAt(alunos.get(i).getAltura(), i, 6);
              tmAluno.setValueAt(alunos.get(i).getTelefone(), i, 7);
          }
      }  
    }
     private void jTTabelaLinhaSelecionada(JTable tabela){
        if (jTTabela.getSelectedRow() != -1) {
            habilitaDados();
            JTid.setText(String.valueOf(alunos.get(tabela.getSelectedRow()).getIdAluno()));
            JTnome.setText(alunos.get(tabela.getSelectedRow()).getNome());
            JTend.setText(alunos.get(tabela.getSelectedRow()).getEndereco());
            JTtel.setText(alunos.get(tabela.getSelectedRow()).getTelefone());
            JTpeso.setText(String.valueOf(alunos.get(tabela.getSelectedRow()).getPeso()));
            JTaltura.setText(String.valueOf(alunos.get(tabela.getSelectedRow()).getAltura()));
            JTidade.setText(String.valueOf(alunos.get(tabela.getSelectedRow()).getIdade()));
            JTcpf.setText(String.valueOf(alunos.get(tabela.getSelectedRow()).getCpf()));
            popularMatMatriculadasList();
            popularMatNaoMatriculadasList();
            Aluno aluno = new Aluno();
            float imc = aluno.verificarImc(Float.parseFloat(JTaltura.getText()), Float.parseFloat(JTpeso.getText()));
            int imcInt = (int) imc;
            imcText.setText(String.valueOf(imcInt));
            if(imc < 17){
            imcMenssagem.setText("Muito abaixo do peso");
            imcMenssagem.setBackground(Color.red);
            }
            if((imc >= 17) && (imc <= 18.49)){
            imcMenssagem.setText("Abaixo do peso");
            imcMenssagem.setBackground(Color.yellow);
            }
            if((imc >= 18.50) && (imc <= 24.99)){
            imcMenssagem.setText("Peso normal");
            imcMenssagem.setBackground(Color.green);
            }
            if((imc >= 25) && (imc <= 29.99)){
            imcMenssagem.setText("Acima do peso");
            imcMenssagem.setBackground(Color.yellow);
            }
            if((imc >= 30) && (imc <= 34.99)){
            imcMenssagem.setText("Obesidade I");
            imcMenssagem.setBackground(Color.red);
            }
            if((imc >= 35) && (imc <= 39.99)){
            imcMenssagem.setText("Obesidade II (severa)");
            imcMenssagem.setBackground(Color.red);
            }
            if(imc > 40){
            imcMenssagem.setText("Obesidade III (m√≥rbida)");
            imcMenssagem.setBackground(Color.red);
            }
            
            
        } else {
            limparCampos();
            model.removeAllElements();
            model2.removeAllElements(); 
            aulasMatriculadasList.setModel(model); 
            aulasNaoMatriculadasList.setModel(model2);
        }
  
     
 
}
     
    
    public void popularMatMatriculadasList (){
        model.removeAllElements();   
        aulasMatriculadasList.setModel(model);  
        
        PreparedStatement stmt = null;
        Connection conn = null;
        
        try {
            conn = ConexaoBanco.getAbreConexao();
            stmt = conn.prepareStatement("select aula.id_aula, aula.nome from matricula\n" +
                                         "inner join aula\n" +
                                         "on matricula.id_aula=aula.id_aula\n" +
                                         "where matricula.id_aluno = "+ JTid.getText());
            ResultSet rs = stmt.executeQuery();

            
            
            while ( rs.next()){
                String aulas = rs.getString("id_aula")+" - "+rs.getString("nome");
                model.addElement(aulas);
  
               
            }
            }   catch (SQLException | HeadlessException e ) {
            JOptionPane.showMessageDialog (null, " Erro   \n" +e);
        }
    
    } 
     
      public void popularMatNaoMatriculadasList (){
        model2.removeAllElements();   
        aulasNaoMatriculadasList.setModel(model2);  
        
        PreparedStatement stmt = null;
        Connection conn = null;
        
        try {
            conn = ConexaoBanco.getAbreConexao();
            stmt = conn.prepareStatement("select aula.id_aula, aula.nome from aula\n" +
                                         "where id_aula not in \n" +
                                         "(\n" +
                                         "select aula.id_aula \n" +
                                         "from aula\n" +
                                         "inner join matricula on aula.id_aula = matricula.id_aula\n" +
                                         "inner join aluno on aluno.id_aluno = matricula.id_aluno\n" +
                                         "where aluno.id_aluno like ?\n" +
                                         ")");
            stmt.setString(1,JTid.getText());
            ResultSet rs = stmt.executeQuery();

            
            
            while ( rs.next()){
                String aulas = rs.getString("id_aula")+" - "+rs.getString("nome");
                model2.addElement(aulas);
  
               
            }
            }   catch (SQLException | HeadlessException e ) {
            JOptionPane.showMessageDialog (null, " Erro   \n" +e);
        }
    
    } 
      
  public void habilitaDados(){
        JTnome.setEditable(true);
        JTend.setEditable(true);
        JTtel.setEditable(true);
        JTidade.setEditable(true);
        JTpeso.setEditable(true);
        JTaltura.setEditable(true);
        JTcpf.setEditable(true);
        
        JTnome.setEnabled(true);
        JTend.setEnabled(true);
        JTtel.setEnabled(true);
        JTidade.setEnabled(true);
        JTpeso.setEnabled(true);
        JTaltura.setEnabled(true);
        JTcpf.setEnabled(true); 
        
    }
      public void desabilitaDados(){
        JTnome.setEditable(false);
        JTend.setEditable(false);
        JTtel.setEditable(false);
        JTidade.setEditable(false);
        JTpeso.setEditable(false);
        JTaltura.setEditable(false);
         JTcpf.setEditable(false);
        
        JTnome.setEnabled(false);
        JTend.setEnabled(false);
        JTtel.setEnabled(false);
        JTidade.setEnabled(false);
        JTpeso.setEnabled(false);
        JTaltura.setEnabled(false);
        JTcpf.setEnabled(false);
        
        
    }
     
     
     private void limparCampos(){
        JTnome.setText("");
        JTend.setText("");
        JTtel.setText("");
        JTidade.setText("");
        JTpeso.setText("");
        JTaltura.setText("");
        JTid.setText("");
        JTcpf.setText("");
        imcText.setText("");
        imcMenssagem.setText("");
        imcMenssagem.setBackground(Color.white);
    } 
     
     private void alteraAluno() throws SQLException, Exception {
       if(jTTabela.getSelectedRow()!=-1){
           if(verificadDados()){
               Aluno aluno = new Aluno();
               AlunoDao dao = new AlunoDao();
              
               aluno.setIdAluno(Integer.parseInt(JTid.getText()));
               aluno.setNome(JTnome.getText());
               aluno.setEndereco(JTend.getText());
               aluno.setTelefone(JTtel.getText());
               aluno.setIdade(Integer.parseInt(JTidade.getText()));
               aluno.setPeso(Integer.parseInt(JTpeso.getText()));
               aluno.setCpf(JTcpf.getText());
               aluno.setAltura(Float.parseFloat(JTaltura.getText()));
               
               dao.alterar(aluno);
               JOptionPane.showMessageDialog(null, "Aluno alterado com sucesso!");
           }
           
       }
    } 
     public boolean verificadDados(){
        if(!JTnome.getText().equals("")&& !JTend.getText().equals("") && !JTtel.getText().equals("") && !JTaltura.getText().equals("") && !JTidade.getText().equals("") && !JTpeso.getText().equals("") && !JTcpf.getText().equals("")){
           return true;
        }else{
           JOptionPane.showMessageDialog(null, "Campos n√£o preenchidos!");
        return false; 
        }       
     
     
     
     
     }    
     
}