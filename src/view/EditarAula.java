/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import com.lowagie.text.DocumentException;
import java.awt.HeadlessException;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import model.Aula;
import model.AulaDao;
import model.ConexaoBanco;
import model.relatorio;

/**
 *
 * @author Douglas Oliveira
 */
public class EditarAula extends javax.swing.JFrame {
    DefaultTableModel tmAula = new DefaultTableModel(null, new String[]{"Id", "Nome", "Horario","Id Prof", "Preço"}){  
          public boolean isCellEditable(int rowIndex, int mColIndex) {  
                return false;  
            }  
        }; 
    List<Aula> aulas;
    ListSelectionModel lsmAulas;
    DefaultListModel model = new DefaultListModel();
    String profDaAula;
    
    boolean[] canEdit = new boolean []{      
           false, false, false, false, false    
       };      
     
       public boolean isCellEditable(int rowIndex, int columnIndex) {      
           return canEdit [columnIndex];      
       } 
    /**
     * Creates new form EditarAula
     */
    public EditarAula() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTTabela = new javax.swing.JTable();
        jTPesquisa = new javax.swing.JTextField();
        jBPesquisa = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTid = new javax.swing.JTextField();
        jTnome = new javax.swing.JTextField();
        jThorario = new javax.swing.JTextField();
        jTpreco = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        alunosMatriculadosList = new javax.swing.JList();
        jLabel7 = new javax.swing.JLabel();
        jComboProf = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setTitle("VISUALIZAR/EDITAR AULA");
        setResizable(false);

        jTTabela.setModel(tmAula);
        jTTabela.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        lsmAulas = jTTabela.getSelectionModel();
        lsmAulas.addListSelectionListener(new ListSelectionListener(){
            public void valueChanged(ListSelectionEvent e){
                if (! e.getValueIsAdjusting()){
                    jTTabelaLinhaSelecionada(jTTabela);
                }
            }
        });
        jScrollPane1.setViewportView(jTTabela);

        jBPesquisa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Utilitarios/Magnifying-Glass-black-48.png"))); // NOI18N
        jBPesquisa.setText("Pesquisar");
        jBPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBPesquisaActionPerformed(evt);
            }
        });

        jLabel1.setText("NOME:");

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setText("ID:");

        jLabel3.setText("NOME:");

        jLabel4.setText("PREÇO:");

        jLabel5.setText("HORARIO:");

        jTid.setEditable(false);

        jLabel6.setText("Prof.:");

        jScrollPane2.setViewportView(alunosMatriculadosList);

        jLabel7.setText("Alunos");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTnome)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTid, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jThorario, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addGap(2, 2, 2)
                        .addComponent(jTpreco, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboProf, 0, 185, Short.MAX_VALUE)))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(74, 74, 74))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTnome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jThorario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTpreco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(jComboProf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Utilitarios/Pdf-32.png"))); // NOI18N
        jButton4.setText("Gerar Relatorio");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Utilitarios/Save-256.png"))); // NOI18N
        jButton2.setText("Salvar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Utilitarios/delete-128.png"))); // NOI18N
        jButton3.setText("Deletar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jTPesquisa)
                        .addGap(18, 18, 18)
                        .addComponent(jBPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTPesquisa)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jBPesquisa)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jBPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBPesquisaActionPerformed
        // TODO add your handling code here:
        
          try {
            // TODO add your handling code here:
  
            listarAulas();
        } catch (Exception ex) {
            Logger.getLogger(EditarProfessor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jBPesquisaActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
            try {
            alteraAula();
            listarAulas();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Problema no jBAltera"+ex);
        } catch (Exception ex) {
            Logger.getLogger(EditarAluno.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
       if (jTTabela.getSelectedRow() == -1) {
        
       JOptionPane.showMessageDialog(null, "Selecione uma aula !");
       
    }else{         
        relatorio doc = new relatorio();
        try {
            doc.getRelatorioAula(jTid.getText());
        } catch (DocumentException ex) {
            Logger.getLogger(TelaInicial.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(TelaInicial.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(TelaInicial.class.getName()).log(Level.SEVERE, null, ex);
        }
        
       }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
    if (jTTabela.getSelectedRow() != -1) {            
        try{
            excluirAula();
            mostraPesquisa(aulas);
            listarAulas();
        } catch (SQLException ex) {
             JOptionPane.showMessageDialog(null, "Erro ao Excluir: Cancele a matricula de todos os alunos que estão na aula");
        } catch (Exception ex) {
            Logger.getLogger(EditarAluno.class.getName()).log(Level.SEVERE, null, ex);
        }
    }else {
            JOptionPane.showMessageDialog(null, "Selecione uma aula para excluir");
    }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditarAula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditarAula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditarAula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditarAula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditarAula().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList alunosMatriculadosList;
    private javax.swing.JButton jBPesquisa;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox jComboProf;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTPesquisa;
    private javax.swing.JTable jTTabela;
    private javax.swing.JTextField jThorario;
    private javax.swing.JTextField jTid;
    private javax.swing.JTextField jTnome;
    private javax.swing.JTextField jTpreco;
    // End of variables declaration//GEN-END:variables


  public void excluirAula() throws SQLException, Exception {
        int resp = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir essa aula?",
                "Confirmação", JOptionPane.YES_NO_OPTION);
        if (resp == JOptionPane.YES_NO_OPTION) {
            AulaDao dao = new AulaDao();
            dao.excluir(aulas.get(jTTabela.getSelectedRow()));
            mostraPesquisa(aulas);
        }
    }
    private void listarAulas() throws Exception {
        
       AulaDao dao = new AulaDao();
       aulas = dao.consultarTodos("%" + jTPesquisa.getText()+ "%"); 
       mostraPesquisa(aulas);
        
  
    }

    private void mostraPesquisa(List<Aula> aulas) {
     while(tmAula.getRowCount()>0){
            tmAula.removeRow(0);
        }
      if(aulas.isEmpty()){
          JOptionPane.showMessageDialog(null, "Nenhum aluno cadastrado!");
      }else{
          String[] linha = new String[] {null, null, null, null, null};
          for (int i = 0; i < aulas.size(); i++) {
              tmAula.addRow(linha);
              tmAula.setValueAt(aulas.get(i).getIdAula(), i, 0);
              tmAula.setValueAt(aulas.get(i).getNome(), i, 1);
              tmAula.setValueAt(aulas.get(i).getHorario(), i, 2);
              tmAula.setValueAt(aulas.get(i).getIdProf(), i, 3);
              tmAula.setValueAt(aulas.get(i).getPreco(), i, 4);

          }
      }  
    }
     private void jTTabelaLinhaSelecionada(JTable tabela){
        if (jTTabela.getSelectedRow() != -1) {
            habilitaDados();
            jTid.setText(String.valueOf(aulas.get(tabela.getSelectedRow()).getIdAula()));
            jTnome.setText(aulas.get(tabela.getSelectedRow()).getNome());
            jThorario.setText(aulas.get(tabela.getSelectedRow()).getHorario());
            jTpreco.setText(String.valueOf(aulas.get(tabela.getSelectedRow()).getPreco()));
            jComboProf.removeAllItems();
            
            profDaAula = (String.valueOf(aulas.get(tabela.getSelectedRow()).getIdProf()));
            popularList();
        PreparedStatement stmt = null;
        Connection conn = null;
        
        try {
            conn = ConexaoBanco.getAbreConexao();
            stmt = conn.prepareStatement("select id_prof, nome from professor where id_prof = "+ profDaAula);
                    
            ResultSet rs = stmt.executeQuery();

            
            
            while ( rs.next()){
                String professores = rs.getString("id_prof")+" - "+rs.getString("nome");
                jComboProf.addItem(professores);
               
            }
            }   catch (SQLException | HeadlessException e ) {
            JOptionPane.showMessageDialog (null, " Erro   \n" +e);
        }

            popularProfessoresCombo();
            
        } else {
            limparCampos();
            jComboProf.removeAllItems(); 
            model.removeAllElements();   
            alunosMatriculadosList.setModel(model); 
            
        }
  
     
 
}
     public void popularList (){
        model.removeAllElements();   
        alunosMatriculadosList.setModel(model);  
        
        PreparedStatement stmt = null;
        Connection conn = null;
        
        try {
            conn = ConexaoBanco.getAbreConexao();
            stmt = conn.prepareStatement("select aluno.nome from aluno\n" +
                                          "inner join matricula\n" +
                                          "on aluno.id_aluno = matricula.id_aluno\n" +
                                          "inner join aula\n" +
                                          "on aula.id_aula = matricula.id_aula\n" +
                                          " where aula.id_aula ="+jTid.getText());
            ResultSet rs = stmt.executeQuery();
            
            while ( rs.next()){
               
               String aulas = (rs.getString("nome")
                        );
                   model.addElement(aulas);           
            
            }
            }   catch (SQLException | HeadlessException e ) {
            JOptionPane.showMessageDialog (null, " Erro   \n" +e);
        }
    
    } 
     
    public void popularProfessoresCombo (){
      //  model.removeAllElements();   
      //  alunosMatriculadosList.setModel(model);  
        
        PreparedStatement stmt = null;
        Connection conn = null;
        
        try {
            conn = ConexaoBanco.getAbreConexao();
            stmt = conn.prepareStatement("select id_prof, nome from professor where id_prof != "+ profDaAula);
                    
            ResultSet rs = stmt.executeQuery();

            
            
            while ( rs.next()){
                String professores = rs.getString("id_prof")+" - "+rs.getString("nome");
                jComboProf.addItem(professores);
               
            }
            }   catch (SQLException | HeadlessException e ) {
            JOptionPane.showMessageDialog (null, " Erro   \n" +e);
        }
    
    } 
     
     
  public void habilitaDados(){
        jTnome.setEditable(true);
        jThorario.setEditable(true);
        jTpreco.setEditable(true);
        

        jTnome.setEnabled(true);
        jThorario.setEnabled(true);
        jTpreco.setEnabled(true);
        
    }
      public void desabilitaDados(){
        
        jTnome.setEditable(false);
        jThorario.setEditable(false);
        jTpreco.setEditable(false);
        
        jTnome.setEnabled(false);
        jThorario.setEnabled(false);
        jTpreco.setEnabled(false);
        
        
    }
     
     
     private void limparCampos(){

        jTnome.setText("");
        jThorario.setText("");
        jTid.setText("");
        jTpreco.setText("");
            
    } 
     
     private void alteraAula() throws SQLException, Exception {
       if(jTTabela.getSelectedRow()!=-1){
           if(verificadDados()){
               Aula aula = new Aula();
               AulaDao dao = new AulaDao();
              
               aula.setIdAula(Integer.parseInt(jTid.getText()));
               aula.setNome(jTnome.getText());
               aula.setHorario(jThorario.getText());
               aula.setPreco(Float.parseFloat(jTpreco.getText()));
               String REGEX = "\\d+";
               Matcher matcherProf = Pattern.compile(REGEX).matcher(jComboProf.getSelectedItem().toString());
               matcherProf.find();
               aula.setIdProf(Integer.parseInt(matcherProf.group()));
               dao.alterar(aula);
               JOptionPane.showMessageDialog(null, "Aula alterada com sucesso!");
           }
           
       }
    } 
     public boolean verificadDados(){
        if(!jTnome.getText().equals("")&& !jThorario.getText().equals("") && !jTpreco.getText().equals("")){
           return true;
        }else{
           JOptionPane.showMessageDialog(null, "Campos não preenchidos!");
        return false; 
        }       
     
     
     
     
     }    
     
}
